{"version":3,"sources":["component/Square.js","component/ScoreWrapper.js","component/Wrapper.js","winner.js","App.js","index.js"],"names":["Square","props","className","onClick","value","ScoreWrapper","refresh","winner","xIsNext","gamePlace","Wrapper","useState","Array","fill","setgamePlace","setxIsNext","squares","lines","i","length","a","b","c","calculateWinner","console","log","map","square","squareClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAWeA,EARA,SAACC,GACZ,OACI,mCACE,qBAAKC,UAAU,SAASC,QAASF,EAAME,QAAvC,SAAiDF,EAAMG,W,UC0BlDC,EA7BM,SAAC,GAMf,IALHC,EAKE,EALFA,QACAC,EAIE,EAJFA,OACAC,EAGE,EAHFA,QAGE,EAFFC,UAeA,OACI,sBAAKP,UAAU,gBAAf,UACI,qBAAKA,UAAU,YAAf,SAZDK,EACQ,UAAYA,EAEZ,SAAWC,EAAU,IAAM,KAAO,UAUzC,qBAAKN,UAAU,oBAAf,qBACA,qBAAKA,UAAU,qBAAf,qBACCI,QC8CEI,G,MAjEC,WACd,MAAkCC,mBAASC,MAAM,GAAGC,KAAK,OAAzD,mBAAOJ,EAAP,KAAkBK,EAAlB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOH,EAAP,KAAgBO,EAAhB,KACMR,ECXD,SAAyBS,GAW/B,IAVA,IAAMC,EAAQ,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAECC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACtC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACrE,OAAON,EAAQI,GAGjB,OAAO,KDNSG,CAAgBd,GAC/Be,QAAQC,IAAIhB,GA+BV,OACI,mCACA,sBAAKP,UAAU,UAAf,UACF,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UAEIO,EAAUiB,KAAI,SAACC,EAAQT,GAAT,OACZ,cAAC,EAAD,CAAiBd,MAAOuB,EAAQxB,QAAS,kBAnCjC,SAACe,GAEhBX,GAAUE,EAAUS,KAEvBT,EAAUS,GAAKV,EAAU,IAAM,IAE/BM,EAAaL,GACbM,GAAYP,IA4B4CoB,CAAYV,KAA5CA,MAGlB,qBAAKhB,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,gBAInB,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CACcI,QAzBJ,WACd,OACE,wBAAQJ,UAAU,UAAUC,QAAW,kBAAKW,EAAaF,MAAM,GAAGC,KAAK,QAAvE,uBAwBgBN,OAAUA,EACVC,QAAWA,EACXC,UAAaA,aErDpBoB,MATf,WAEE,OACE,mCACE,cAAC,EAAD,OCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c72a2f31.chunk.js","sourcesContent":["import React from 'react';\r\nimport './square.css'\r\n\r\nconst Square = (props) => {\r\n    return (\r\n        <>\r\n          <div className=\"square\" onClick={props.onClick}>{props.value}</div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Square;\r\n","\r\nimport './scorewrapper.css';\r\n\r\nconst ScoreWrapper = ({\r\n    refresh,\r\n    winner,\r\n    xIsNext,\r\n    gamePlace\r\n    \r\n}) => {\r\n\r\n    const checkWinner = () => {\r\n        if(winner) {  \r\n            return 'Winner ' + winner;\r\n        } else  {\r\n            return \"Now  \" + (xIsNext ? 'X' : 'O') + \" turn\"\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"score-wrapper\">\r\n            <div className=\"sub-score\">{checkWinner()}</div>\r\n            <div className=\"first-player text\">Player1</div>\r\n            <div className=\"second-player text\">Player2</div>\r\n            {refresh()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreWrapper;\r\n","import React, { useState } from \"react\";\r\nimport Square from \"./Square\";\r\nimport { calculateWinner } from \"../winner\";\r\nimport ScoreWrapper from \"./ScoreWrapper\";\r\n\r\nimport \"./wrapper.css\"\r\n\r\n\r\nconst Wrapper = () => {\r\n  const [gamePlace, setgamePlace] = useState(Array(9).fill(null));\r\n  const [xIsNext, setxIsNext] = useState(true);\r\n  const winner = calculateWinner(gamePlace)                                                                                                                                                                                         \r\n  console.log(gamePlace);\r\n  \r\n\r\n  const squareClick = (i) => {\r\n    \r\n    if(winner || gamePlace[i]) return;\r\n\r\n    gamePlace[i] = xIsNext ? \"x\" : \"o\";\r\n    \r\n    setgamePlace(gamePlace);\r\n    setxIsNext(!xIsNext)\r\n  }\r\n\r\n  const isTie = () => {\r\n    let filled = true;\r\n    gamePlace.forEach((s)=> {\r\n      if(s == null) {\r\n        filled = false;\r\n      }\r\n    })\r\n  }\r\n\r\n \r\n  \r\n\r\n  const refresh = () => {\r\n    return (\r\n      <button className=\"refresh\" onClick = {()=> setgamePlace(Array(9).fill(null)) }>NEW GAME</button>\r\n    )\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"wrapper\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"game-place\">\r\n          {\r\n            gamePlace.map((square, i) => (\r\n              <Square key ={i} value={square} onClick={()=> squareClick(i)}/>\r\n            ))  \r\n          }\r\n          <div className=\"line-1\"></div>\r\n          <div className=\"line-2\"></div>\r\n          <div className=\"line-3\"></div>\r\n          <div className=\"line-4\"></div>\r\n        \r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-4\">\r\n        <ScoreWrapper \r\n                      refresh ={refresh}\r\n                      winner = {winner}\r\n                      xIsNext = {xIsNext}\r\n                      gamePlace = {gamePlace}\r\n                      \r\n        />\r\n      </div>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\nexport default Wrapper;","export function calculateWinner(squares) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t]\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i]\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\treturn squares[a]\r\n\t\t}\r\n\t}\r\n\treturn null\r\n}","import React from 'react'\nimport Wrapper from './component/Wrapper'\n\nfunction App() {\n  \n  return (\n    <>\n      <Wrapper />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}